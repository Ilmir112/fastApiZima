"""upgrade wellsdata

Revision ID: f9eab46327fb
Revises: 
Create Date: 2025-05-09 20:03:27.943053

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f9eab46327fb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('login_user', sa.String(), nullable=False),
    sa.Column('name_user', sa.String(), nullable=False),
    sa.Column('surname_user', sa.String(), nullable=False),
    sa.Column('second_name', sa.String(), nullable=False),
    sa.Column('position_id', sa.String(), nullable=False),
    sa.Column('costumer', sa.String(), nullable=False),
    sa.Column('contractor', sa.String(), nullable=False),
    sa.Column('ctcrs', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('access_level', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('well_classifier',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cdng', sa.String(), nullable=False),
    sa.Column('well_number', sa.String(), nullable=False),
    sa.Column('deposit_area', sa.String(), nullable=False),
    sa.Column('oilfield', sa.String(), nullable=True),
    sa.Column('category_pressure', sa.String(), nullable=True),
    sa.Column('pressure_ppl', sa.String(), nullable=True),
    sa.Column('pressure_gst', sa.String(), nullable=True),
    sa.Column('date_measurement', sa.String(), nullable=True),
    sa.Column('category_h2s', sa.String(), nullable=True),
    sa.Column('h2s_pr', sa.String(), nullable=True),
    sa.Column('h2s_mg_l', sa.String(), nullable=True),
    sa.Column('h2s_mg_m', sa.String(), nullable=True),
    sa.Column('category_gf', sa.String(), nullable=True),
    sa.Column('gas_factor', sa.String(), nullable=True),
    sa.Column('today', sa.Date(), nullable=False),
    sa.Column('region', sa.String(), nullable=False),
    sa.Column('costumer', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wells_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('well_number', sa.String(), nullable=False),
    sa.Column('area_well', sa.String(), nullable=False),
    sa.Column('well_oilfield', sa.String(), nullable=False),
    sa.Column('cdng', sa.String(), nullable=False),
    sa.Column('costumer', sa.String(), nullable=True),
    sa.Column('inventory_number', sa.String(), nullable=True),
    sa.Column('wellhead_fittings', sa.String(), nullable=True),
    sa.Column('appointment', sa.String(), nullable=True),
    sa.Column('angle_data', sa.JSON(), nullable=True),
    sa.Column('column_direction', sa.JSON(), nullable=True),
    sa.Column('column_conductor', sa.JSON(), nullable=True),
    sa.Column('column_production', sa.JSON(), nullable=True),
    sa.Column('column_additional', sa.JSON(), nullable=True),
    sa.Column('bottom_hole_drill', sa.Float(), nullable=True),
    sa.Column('bottom_hole_artificial', sa.Float(), nullable=True),
    sa.Column('max_angle', sa.Float(), nullable=True),
    sa.Column('distance_from_rotor_table', sa.Float(), nullable=True),
    sa.Column('max_angle_depth', sa.Float(), nullable=True),
    sa.Column('max_expected_pressure', sa.Float(), nullable=True),
    sa.Column('max_admissible_pressure', sa.Float(), nullable=True),
    sa.Column('rotor_altitude', sa.Float(), nullable=True),
    sa.Column('perforation', sa.JSON(), nullable=True),
    sa.Column('equipment', sa.JSON(), nullable=True),
    sa.Column('nkt_data', sa.JSON(), nullable=True),
    sa.Column('sucker_pod', sa.JSON(), nullable=True),
    sa.Column('diameter_doloto_ek', sa.Float(), nullable=True),
    sa.Column('last_pressure_date', sa.Date(), nullable=True),
    sa.Column('date_commissioning', sa.Date(), nullable=True),
    sa.Column('date_drilling_run', sa.Date(), nullable=True),
    sa.Column('date_drilling_finish', sa.Date(), nullable=True),
    sa.Column('geolog', sa.String(), nullable=True),
    sa.Column('date_create', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wells_repairs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('wells_id', sa.Integer(), nullable=False),
    sa.Column('category_dict', sa.JSON(), nullable=False),
    sa.Column('type_kr', sa.String(), nullable=False),
    sa.Column('work_plan', sa.String(), nullable=False),
    sa.Column('excel_json', sa.JSON(), nullable=False),
    sa.Column('data_change_paragraph', sa.JSON(), nullable=False),
    sa.Column('norms_time', sa.Float(), nullable=False),
    sa.Column('chemistry_need', sa.JSON(), nullable=False),
    sa.Column('geolog_id', sa.Integer(), nullable=False),
    sa.Column('date_create', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('wells_silencing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('well_number', sa.String(), nullable=False),
    sa.Column('deposit_area', sa.String(), nullable=False),
    sa.Column('today', sa.Date(), nullable=False),
    sa.Column('region', sa.String(), nullable=False),
    sa.Column('costumer', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('wells_silencing')
    op.drop_table('wells_repairs')
    op.drop_table('wells_data')
    op.drop_table('well_classifier')
    op.drop_table('users')
    # ### end Alembic commands ###
