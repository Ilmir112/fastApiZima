"""Данные по нормам

Revision ID: 2628f31ae5d0
Revises: ab79825f9583
Create Date: 2025-06-10 13:19:41.424337

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "2628f31ae5d0"
down_revision: Union[str, None] = "ab79825f9583"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("brigade")
    op.drop_table("norms")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "norms",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("repair_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "start_well_repair",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "repair_well_repair",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("type_tkrs", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "summary_work",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "norms_json",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("creater_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("lifting_unit", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["creater_id"], ["users.id"], name="norms_creater_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["repair_id"], ["wells_repairs.id"], name="norms_repair_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="norms_pkey"),
    )
    op.create_table(
        "brigade",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("contractor", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("costumer", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("expedition", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("number_brigade", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "brigade_master",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "phone_number_brigade", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column("lifting_unit", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "hydraulic_wrench", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "weight_indicator", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "brigade_composition",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("pvo_type", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("number_pvo", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="brigade_pkey"),
        sa.UniqueConstraint("number_brigade", name="brigade_number_brigade_key"),
    )
    # ### end Alembic commands ###
