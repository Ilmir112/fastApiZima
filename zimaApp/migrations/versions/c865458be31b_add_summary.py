"""add summary

Revision ID: c865458be31b
Revises: e633fc04b62b
Create Date: 2025-08-06 15:10:25.084721

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c865458be31b'
down_revision: Union[str, None] = 'e633fc04b62b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brigade_summary',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('time_interval', sa.Enum('EARLY_MORNING', 'MORNING', 'LATE_MORNING', 'AFTERNOON', 'EVENING', 'NIGHT', name='timeworkenum'), nullable=False),
    sa.Column('work_details', sa.Text(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('act_path', sa.Text(), nullable=True),
    sa.Column('status_act', sa.Enum('NOT_SIGNED', 'PLAN_IS_SIGNED', 'FULLY_NOT_SIGNED', name='statusworkplan2'), nullable=True),
    sa.Column('foto_path', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('video_path', sa.ARRAY(sa.String()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('repair_times',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('brigade_id', sa.Integer(), nullable=False),
    sa.Column('well_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('OPEN', 'ClOSE', 'PAUSE', name='statussummary'), nullable=False),
    sa.Column('brigade_summary_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['brigade_id'], ['brigade.id'], ),
    sa.ForeignKeyConstraint(['brigade_summary_id'], ['brigade_summary.id'], ),
    sa.ForeignKeyConstraint(['well_id'], ['wells_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_unique_constraint(None, 'users', ['login_user'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_table('repair_times')
    op.drop_table('brigade_summary')
    # ### end Alembic commands ###
